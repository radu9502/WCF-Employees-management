//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientSideForum.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="EmployeesService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IManageEmployees")]
    public interface IManageEmployees {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Add", ReplyAction="http://tempuri.org/IManageEmployees/AddResponse")]
        void Add(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Add", ReplyAction="http://tempuri.org/IManageEmployees/AddResponse")]
        System.Threading.Tasks.Task AddAsync(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Edit", ReplyAction="http://tempuri.org/IManageEmployees/EditResponse")]
        void Edit(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Edit", ReplyAction="http://tempuri.org/IManageEmployees/EditResponse")]
        System.Threading.Tasks.Task EditAsync(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Read", ReplyAction="http://tempuri.org/IManageEmployees/ReadResponse")]
        string Read(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Read", ReplyAction="http://tempuri.org/IManageEmployees/ReadResponse")]
        System.Threading.Tasks.Task<string> ReadAsync(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Delete", ReplyAction="http://tempuri.org/IManageEmployees/DeleteResponse")]
        void Delete(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Delete", ReplyAction="http://tempuri.org/IManageEmployees/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Update", ReplyAction="http://tempuri.org/IManageEmployees/UpdateResponse")]
        void Update(ClientSideForum.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployees/Update", ReplyAction="http://tempuri.org/IManageEmployees/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(ClientSideForum.ServiceReference2.Employee emp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManageEmployeesChannel : ClientSideForum.ServiceReference2.IManageEmployees, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManageEmployeesClient : System.ServiceModel.ClientBase<ClientSideForum.ServiceReference2.IManageEmployees>, ClientSideForum.ServiceReference2.IManageEmployees {
        
        public ManageEmployeesClient() {
        }
        
        public ManageEmployeesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManageEmployeesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageEmployeesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageEmployeesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(ClientSideForum.ServiceReference2.Employee emp) {
            base.Channel.Add(emp);
        }
        
        public System.Threading.Tasks.Task AddAsync(ClientSideForum.ServiceReference2.Employee emp) {
            return base.Channel.AddAsync(emp);
        }
        
        public void Edit(ClientSideForum.ServiceReference2.Employee emp) {
            base.Channel.Edit(emp);
        }
        
        public System.Threading.Tasks.Task EditAsync(ClientSideForum.ServiceReference2.Employee emp) {
            return base.Channel.EditAsync(emp);
        }
        
        public string Read(ClientSideForum.ServiceReference2.Employee emp) {
            return base.Channel.Read(emp);
        }
        
        public System.Threading.Tasks.Task<string> ReadAsync(ClientSideForum.ServiceReference2.Employee emp) {
            return base.Channel.ReadAsync(emp);
        }
        
        public void Delete(ClientSideForum.ServiceReference2.Employee emp) {
            base.Channel.Delete(emp);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(ClientSideForum.ServiceReference2.Employee emp) {
            return base.Channel.DeleteAsync(emp);
        }
        
        public void Update(ClientSideForum.ServiceReference2.Employee emp) {
            base.Channel.Update(emp);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(ClientSideForum.ServiceReference2.Employee emp) {
            return base.Channel.UpdateAsync(emp);
        }
    }
}
